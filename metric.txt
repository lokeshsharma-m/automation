#dataset

import random
import pandas as pd
from datetime import datetime, timedelta

# Define start time for the dataset
start_time = datetime(2024, 1, 1)

# Generate synthetic metric data
data = []
for i in range(100):
    timestamp = start_time + timedelta(hours=i)
    traffic_volume = random.randint(100, 1000)
    cpu_utilization = round(random.uniform(0.0, 100.0), 2)
    response_time = round(random.uniform(0.1, 1.0), 2)
    data.append([timestamp, traffic_volume, cpu_utilization, response_time])

# Create a DataFrame from the generated data
columns = ['Timestamp', 'Web Traffic Volume', 'CPU Utilization', 'Response Time']
df = pd.DataFrame(data, columns=columns)

# Save the dataset to a CSV file
df.to_csv('synthetic_metrics_dataset.csv', index=False)

print("Synthetic metrics dataset generated and saved to synthetic_metrics_dataset.csv")


#model

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from datetime import datetime, timedelta

# Read the generated dataset from CSV
df = pd.read_csv('synthetic_metrics_dataset.csv')

# Extract relevant columns
timestamps = pd.to_datetime(df['Timestamp'])
traffic_volume = df['Web Traffic Volume']

# Perform linear regression on historical data
X = np.array(timestamps.astype(int)).reshape(-1, 1)  # Convert timestamps to milliseconds since epoch
y = np.array(traffic_volume)
model = LinearRegression()
model.fit(X, y)

# Predict future traffic volume using linear regression model
start_time = timestamps.iloc[-1] + timedelta(hours=1)  # Predict for the next hour
future_timestamps = pd.date_range(start=start_time, periods=24, freq='H')
future_X = np.array(future_timestamps.astype(int)).reshape(-1, 1)  # Convert future timestamps to milliseconds since epoch
future_traffic_volume = model.predict(future_X)

# Generate auto-scaling recommendations based on predicted traffic volume
scaling_recommendations = list(zip(future_timestamps, future_traffic_volume))

# Print auto-scaling recommendations
print("Auto-Scaling Recommendations:")
for timestamp, volume in scaling_recommendations:
    print(f"At {timestamp}: Predicted traffic volume = {volume}")
