image caption -output--rag based llm model



import transformers

from transformers import AutoProcessor, Blip2ForConditionalGeneration
import torch

import requests
from PIL import Image
from transformers import Blip2Processor,Blip2ForConditionalGeneration

device = "cuda" if torch.cuda.is_available() else "cpu"


processor = Blip2Processor.from_pretrained("Salesforce/blip2-opt-2.7b")
model = Blip2ForConditionalGeneration.from_pretrained("Salesforce/blip2-opt-2.7b")
model.to(device)

url = 'https://media.newyorker.com/cartoons/63dc6847be24a6a76d90eb99/master/w_1160,c_limit/230213_a26611_838.jpg'
image = Image.open(requests.get(url, stream=True).raw).convert('RGB')  
display(image)

type(image)


inputs = processor(image, return_tensors="pt").to(device)

generated_ids = model.generate(**inputs)
generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0].strip()
print(generated_text)


prompt = "Question: How many monsters are there? Answer:"

inputs = processor(image, text=prompt, return_tensors="pt").to(device)

generated_ids = model.generate(**inputs)
generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0].strip()
print(generated_text)

image=Image.open('')
image_my











######code################

pip install git+https://github.com/huggingface/transformers.git

pip install torch 

import transformers

from transformers import AutoProcessor, Blip2ForConditionalGeneration
import torch

pip install Pillow

import requests
import PIL
from PIL import Image
from transformers import Blip2Processor,Blip2ForConditionalGeneration

device = "cuda" if torch.cuda.is_available() else "cpu"

processor = Blip2Processor.from_pretrained("Salesforce/blip2-opt-2.7b")
model = Blip2ForConditionalGeneration.from_pretrained("Salesforce/blip2-opt-2.7b")
model.to(device)

# url = 'https://media.newyorker.com/cartoons/63dc6847be24a6a76d90eb99/master/w_1160,c_limit/230213_a26611_838.jpg'
# url = 'https://www.splashlearn.com/math-vocabulary/wp-content/uploads/2022/10/Bar-Graph-1-1.png'
url="http://images.cocodataset.org/val2017/000000039769.jpg"
image = Image.open(requests.get(url, stream=True).raw) 
display(image)

type(image)

inputs = processor(image, return_tensors="pt").to(device)

generated_ids = model.generate(**inputs)
generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0].strip()
print(generated_text)

prompt = "Question:what is the cat doing? Answer: "

inputs = processor(image, text=prompt, return_tensors="pt").to(device)

generated_ids = model.generate(**inputs,max_new_tokens=51)
generated_text = processor.batch_decode(generated_ids, skip_special_tokens=True)[0].strip()
print(generated_text)

context = [
   ("how many students like caramel flavor?", "10"),
   ("how many flavors are there in the image?", "4")
]
question = "What is most popular flavor ?"
template = "Question: {} Answer: {}."

prompt = " ".join([template.format(context[i][0], context[i][1]) for i in range(len(context))]) + " Question: " + question + " Answer:"

print(prompt)
